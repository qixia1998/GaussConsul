// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: gauss.proto

package gaussclient

import (
	"context"

	"GaussConsul/service/gauss/rpc/types/gauss"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	HealthCheckRequest  = gauss.HealthCheckRequest
	HealthCheckResponse = gauss.HealthCheckResponse

	Gauss interface {
		HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	}

	defaultGauss struct {
		cli zrpc.Client
	}
)

func NewGauss(cli zrpc.Client) Gauss {
	return &defaultGauss{
		cli: cli,
	}
}

func (m *defaultGauss) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	client := gauss.NewGaussClient(m.cli.Conn())
	return client.HealthCheck(ctx, in, opts...)
}
